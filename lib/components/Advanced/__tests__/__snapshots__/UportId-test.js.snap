// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Advanced - UportId doesnt break when empty 1`] = `
<View
  style={
    Object {
      "backgroundColor": "rgba(246,247,248,1)",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Array [
        Object {
          "backgroundColor": "rgba(246,247,248,1)",
          "flex": 0,
        },
        Object {},
      ]
    }
    refreshControl={undefined}
    style={
      Array [
        Object {
          "borderBottomColor": "rgba(216,216,216,1)",
          "borderBottomWidth": 1,
        },
        Object {
          "flex": 1,
        },
      ]
    }
  >
    <View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#FFFFFF",
                "borderColor": "rgba(216,216,216,1)",
                "borderTopWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "padding": 19,
              },
              Object {},
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "rgba(170,170,170,1)",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 16,
                "lineHeight": 22,
              }
            }
          >
            DID
          </Text>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "rgba(74,74,74,1)",
                    "fontFamily": "NunitoSans-Light",
                    "fontSize": 14,
                    "lineHeight": 22,
                  },
                  Object {},
                ]
              }
            />
          </View>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#FFFFFF",
                "borderColor": "rgba(216,216,216,1)",
                "borderTopWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "padding": 19,
              },
              Object {},
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "rgba(170,170,170,1)",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 16,
                "lineHeight": 22,
              }
            }
          >
            Address
          </Text>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "rgba(74,74,74,1)",
                    "fontFamily": "NunitoSans-Light",
                    "fontSize": 14,
                    "lineHeight": 22,
                  },
                  Object {},
                ]
              }
            />
            <Icon
              color="rgba(216,216,216,1)"
              name="ios-link-outline"
              size={20}
              style={
                Object {
                  "marginLeft": 16,
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 0,
            "height": 1334,
            "justifyContent": "flex-end",
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "flex": 0,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 8,
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "margin": 15,
                  "padding": 10,
                },
                Array [
                  Object {
                    "borderColor": "rgba(54,184,123,1)",
                    "borderWidth": 1,
                    "marginLeft": 15,
                    "marginRight": 15,
                  },
                  Object {
                    "borderColor": "rgba(231, 76, 60, 1)",
                  },
                ],
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "NunitoSans-Bold",
                    "fontSize": 18,
                    "textAlign": "center",
                  },
                  Array [
                    Object {
                      "color": "rgba(54,184,123,1)",
                      "fontFamily": "NunitoSans-Bold",
                      "fontSize": 18,
                      "lineHeight": 25,
                      "padding": 3,
                    },
                    Object {
                      "color": "rgba(231, 76, 60, 1)",
                    },
                  ],
                  Object {},
                ]
              }
            >
              Reset Identity
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Advanced - UportId renders a connected component as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <uPortID
    address="0x9df0e9759b17f34e9123adbe6d3f25d54b72ad6a"
    did="did:uport:0x9df0e9759b17f34e9123adbe6d3f25d54b72ad6a"
    explorerUrl="https://rinkeby.etherscan.io"
    hexaddress={null}
    ipfsProfile={null}
    legacy={true}
    navigator={FakeNavigator {}}
    resetIdentity={[Function]}
    savePublicUport={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <MenuItem
          onPress={[Function]}
          title="DID"
          value="did:uport:0x9df0e9759b17f34e91..."
        />,
        <MenuItem
          href="https://rinkeby.etherscan.io/address/null"
          title="Address"
          value={undefined}
        />,
        <MenuItem
          onPress={[Function]}
          title="MNID"
          value="0x9df0e9759b17f34e9123adbe6d3f..."
        />,
        null,
        <Component
          style={
            Object {
              "flex": 0,
              "height": 1334,
              "justifyContent": "flex-end",
            }
          }
        >
          <DangerButton
            onPress={[Function]}
          >
            Reset Identity
          </DangerButton>
        </Component>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "onPress": [Function],
          "title": "DID",
          "value": "did:uport:0x9df0e9759b17f34e91...",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "href": "https://rinkeby.etherscan.io/address/null",
          "title": "Address",
          "value": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "onPress": [Function],
          "title": "MNID",
          "value": "0x9df0e9759b17f34e9123adbe6d3f...",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            null,
            <DangerButton
              onPress={[Function]}
            >
              Reset Identity
            </DangerButton>,
          ],
          "style": Object {
            "flex": 0,
            "height": 1334,
            "justifyContent": "flex-end",
          },
        },
        "ref": null,
        "rendered": Array [
          null,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Reset Identity",
              "onPress": [Function],
            },
            "ref": null,
            "rendered": "Reset Identity",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <MenuItem
            onPress={[Function]}
            title="DID"
            value="did:uport:0x9df0e9759b17f34e91..."
          />,
          <MenuItem
            href="https://rinkeby.etherscan.io/address/null"
            title="Address"
            value={undefined}
          />,
          <MenuItem
            onPress={[Function]}
            title="MNID"
            value="0x9df0e9759b17f34e9123adbe6d3f..."
          />,
          null,
          <Component
            style={
              Object {
                "flex": 0,
                "height": 1334,
                "justifyContent": "flex-end",
              }
            }
          >
            <DangerButton
              onPress={[Function]}
            >
              Reset Identity
            </DangerButton>
          </Component>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "onPress": [Function],
            "title": "DID",
            "value": "did:uport:0x9df0e9759b17f34e91...",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "href": "https://rinkeby.etherscan.io/address/null",
            "title": "Address",
            "value": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "onPress": [Function],
            "title": "MNID",
            "value": "0x9df0e9759b17f34e9123adbe6d3f...",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              null,
              <DangerButton
                onPress={[Function]}
              >
                Reset Identity
              </DangerButton>,
            ],
            "style": Object {
              "flex": 0,
              "height": 1334,
              "justifyContent": "flex-end",
            },
          },
          "ref": null,
          "rendered": Array [
            null,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Reset Identity",
                "onPress": [Function],
              },
              "ref": null,
              "rendered": "Reset Identity",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;

exports[`Advanced - UportId renders uPortId data 1`] = `
<View
  style={
    Object {
      "backgroundColor": "rgba(246,247,248,1)",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Array [
        Object {
          "backgroundColor": "rgba(246,247,248,1)",
          "flex": 0,
        },
        Object {},
      ]
    }
    refreshControl={undefined}
    style={
      Array [
        Object {
          "borderBottomColor": "rgba(216,216,216,1)",
          "borderBottomWidth": 1,
        },
        Object {
          "flex": 1,
        },
      ]
    }
  >
    <View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#FFFFFF",
                "borderColor": "rgba(216,216,216,1)",
                "borderTopWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "padding": 19,
              },
              Object {},
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "rgba(170,170,170,1)",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 16,
                "lineHeight": 22,
              }
            }
          >
            DID
          </Text>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "rgba(74,74,74,1)",
                    "fontFamily": "NunitoSans-Light",
                    "fontSize": 14,
                    "lineHeight": 22,
                  },
                  Object {},
                ]
              }
            />
          </View>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#FFFFFF",
                "borderColor": "rgba(216,216,216,1)",
                "borderTopWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "padding": 19,
              },
              Object {},
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "rgba(170,170,170,1)",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 16,
                "lineHeight": 22,
              }
            }
          >
            Address
          </Text>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "rgba(74,74,74,1)",
                    "fontFamily": "NunitoSans-Light",
                    "fontSize": 14,
                    "lineHeight": 22,
                  },
                  Object {},
                ]
              }
            >
              0x9df0e9759b17f34e9123adbe6d3f...
            </Text>
            <Icon
              color="rgba(216,216,216,1)"
              name="ios-link-outline"
              size={20}
              style={
                Object {
                  "marginLeft": 16,
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 0,
            "height": 1334,
            "justifyContent": "flex-end",
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "flex": 0,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 8,
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "margin": 15,
                  "padding": 10,
                },
                Array [
                  Object {
                    "borderColor": "rgba(54,184,123,1)",
                    "borderWidth": 1,
                    "marginLeft": 15,
                    "marginRight": 15,
                  },
                  Object {
                    "borderColor": "rgba(231, 76, 60, 1)",
                  },
                ],
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "NunitoSans-Bold",
                    "fontSize": 18,
                    "textAlign": "center",
                  },
                  Array [
                    Object {
                      "color": "rgba(54,184,123,1)",
                      "fontFamily": "NunitoSans-Bold",
                      "fontSize": 18,
                      "lineHeight": 25,
                      "padding": 3,
                    },
                    Object {
                      "color": "rgba(231, 76, 60, 1)",
                    },
                  ],
                  Object {},
                ]
              }
            >
              Reset Identity
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
