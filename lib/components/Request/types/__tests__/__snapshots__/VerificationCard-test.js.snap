// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VerificationCard renders a connected VerificationCard as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <VerificationCard
    address={null}
    attestationsForTypeAndValue={[Function]}
    authorizeRequest={[Function]}
    cancelRequest={[Function]}
    claims={
      Array [
        Object {
          "key": "loading",
          "value": "loading",
        },
      ]
    }
    issuer={Object {}}
    navigator={
      FakeNavigator {
        "event": [Function],
      }
    }
    request={Object {}}
    showActions={true}
    title="loading"
    verification={
      Object {
        "claim": Object {
          "loading": "loading",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Component
          style={
            Object {
              "alignItems": "stretch",
              "backgroundColor": "#FFFFFF",
              "flex": 0,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 22,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "rgba(74,74,74,1)",
                "fontFamily": undefined,
                "fontSize": 14,
                "lineHeight": 19,
              }
            }
          >
            from: 
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontWeight": "600",
                }
              }
            />
          </Text>
          <ExpirationItem
            d={undefined}
          />
        </Component>,
        <Component
          style={
            Object {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <ConectedComponent
            data={
              Object {
                "loading": "loading",
              }
            }
            navigator={
              FakeNavigator {
                "event": [Function],
              }
            }
          />
        </Component>,
        <AcceptCancelGroup
          acceptText="Accept"
          cancelText="Delete"
          onAccept={[Function]}
          onCancel={[Function]}
        />,
      ],
      "style": Object {
        "flex": 1,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "rgba(74,74,74,1)",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "lineHeight": 19,
                }
              }
            >
              from: 
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontWeight": "600",
                  }
                }
              />
            </Text>,
            <ExpirationItem
              d={undefined}
            />,
          ],
          "style": Object {
            "alignItems": "stretch",
            "backgroundColor": "#FFFFFF",
            "flex": 0,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "padding": 22,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": Array [
                "from: ",
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "fontWeight": "600",
                    }
                  }
                />,
              ],
              "ellipsizeMode": "tail",
              "style": Object {
                "color": "rgba(74,74,74,1)",
                "fontFamily": undefined,
                "fontSize": 14,
                "lineHeight": 19,
              },
            },
            "ref": null,
            "rendered": Array [
              "from: ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "accessible": true,
                  "allowFontScaling": true,
                  "children": undefined,
                  "ellipsizeMode": "tail",
                  "style": Object {
                    "fontWeight": "600",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "d": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <ConectedComponent
            data={
              Object {
                "loading": "loading",
              }
            }
            navigator={
              FakeNavigator {
                "event": [Function],
              }
            }
          />,
          "style": Object {
            "flex": 1,
            "flexDirection": "column",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "data": Object {
              "loading": "loading",
            },
            "navigator": FakeNavigator {
              "event": [Function],
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "acceptText": "Accept",
          "cancelText": "Delete",
          "onAccept": [Function],
          "onCancel": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Component
            style={
              Object {
                "alignItems": "stretch",
                "backgroundColor": "#FFFFFF",
                "flex": 0,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "padding": 22,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "rgba(74,74,74,1)",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "lineHeight": 19,
                }
              }
            >
              from: 
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontWeight": "600",
                  }
                }
              />
            </Text>
            <ExpirationItem
              d={undefined}
            />
          </Component>,
          <Component
            style={
              Object {
                "flex": 1,
                "flexDirection": "column",
              }
            }
          >
            <ConectedComponent
              data={
                Object {
                  "loading": "loading",
                }
              }
              navigator={
                FakeNavigator {
                  "event": [Function],
                }
              }
            />
          </Component>,
          <AcceptCancelGroup
            acceptText="Accept"
            cancelText="Delete"
            onAccept={[Function]}
            onCancel={[Function]}
          />,
        ],
        "style": Object {
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "rgba(74,74,74,1)",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "lineHeight": 19,
                  }
                }
              >
                from: 
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "fontWeight": "600",
                    }
                  }
                />
              </Text>,
              <ExpirationItem
                d={undefined}
              />,
            ],
            "style": Object {
              "alignItems": "stretch",
              "backgroundColor": "#FFFFFF",
              "flex": 0,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 22,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "accessible": true,
                "allowFontScaling": true,
                "children": Array [
                  "from: ",
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Object {
                        "fontWeight": "600",
                      }
                    }
                  />,
                ],
                "ellipsizeMode": "tail",
                "style": Object {
                  "color": "rgba(74,74,74,1)",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "lineHeight": 19,
                },
              },
              "ref": null,
              "rendered": Array [
                "from: ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "accessible": true,
                    "allowFontScaling": true,
                    "children": undefined,
                    "ellipsizeMode": "tail",
                    "style": Object {
                      "fontWeight": "600",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "d": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <ConectedComponent
              data={
                Object {
                  "loading": "loading",
                }
              }
              navigator={
                FakeNavigator {
                  "event": [Function],
                }
              }
            />,
            "style": Object {
              "flex": 1,
              "flexDirection": "column",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "data": Object {
                "loading": "loading",
              },
              "navigator": FakeNavigator {
                "event": [Function],
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "acceptText": "Accept",
            "cancelText": "Delete",
            "onAccept": [Function],
            "onCancel": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;
