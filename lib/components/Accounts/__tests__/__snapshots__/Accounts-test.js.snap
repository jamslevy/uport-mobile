// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Accounts Index Account Item renders an item correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  collapsable={undefined}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#FFFFFF",
      "borderBottomWidth": 0.5,
      "borderColor": "rgba(216,216,216,1)",
      "flexDirection": "row",
      "justifyContent": "space-between",
      "opacity": 1,
      "padding": 15,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 0,
            "justifyContent": "center",
          },
          Object {
            "backgroundColor": "white",
            "borderRadius": 30,
            "height": 50,
            "width": 50,
          },
        ]
      }
    >
      <Image
        resizeMode="cover"
        source={
          Object {
            "testUri": "../../../assets/images/eth-symbol2.png",
          }
        }
        style={
          Array [
            Object {
              "borderRadius": 30,
              "height": 50,
              "width": 50,
            },
            Object {
              "position": "absolute",
            },
            Array [
              Object {
                "borderRadius": 30,
                "height": 50,
                "width": 50,
              },
              undefined,
            ],
          ]
        }
      />
    </View>
  </View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "rgba(74,74,74,1)",
          "fontSize": 14,
          "lineHeight": 22,
        },
        Object {
          "flex": 1,
          "marginLeft": 19,
        },
      ]
    }
  >
    Ethereum (Rinkeby)
  </Text>
  <Icon
    color="rgba(216,216,216,1)"
    name="ios-arrow-forward-outline"
    size={20}
  />
</View>
`;

exports[`Accounts Index renders a connected Accounts index as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Accounts
    accountProfileLookup={[Function]}
    accounts={Array []}
    dispatch={[Function]}
    navigator={
      FakeNavigator {
        "event": [Function],
        "styles": Object {
          "navBarButtonColor": "rgba(92,80,202,1)",
          "navBarFontFamily": undefined,
          "navBarFontSize": 18,
          "navBarNoBorder": true,
          "navBarTextColor": "rgba(74,74,74,1)",
        },
      }
    }
    notificationsCount={0}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <FlatList
        data={Array []}
        disableVirtualization={false}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onEndReachedThreshold={2}
        renderItem={[Function]}
        scrollEventThrottle={50}
        style={
          Object {
            "backgroundColor": "#ffffff",
            "flex": 1,
          }
        }
        updateCellsBatchingPeriod={50}
        windowSize={21}
      />,
      "style": Object {
        "backgroundColor": "rgba(246,247,248,1)",
        "flex": 1,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "data": Array [],
        "disableVirtualization": false,
        "horizontal": false,
        "initialNumToRender": 10,
        "keyExtractor": [Function],
        "maxToRenderPerBatch": 10,
        "numColumns": 1,
        "onEndReachedThreshold": 2,
        "renderItem": [Function],
        "scrollEventThrottle": 50,
        "style": Object {
          "backgroundColor": "#ffffff",
          "flex": 1,
        },
        "updateCellsBatchingPeriod": 50,
        "windowSize": 21,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <FlatList
          data={Array []}
          disableVirtualization={false}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onEndReachedThreshold={2}
          renderItem={[Function]}
          scrollEventThrottle={50}
          style={
            Object {
              "backgroundColor": "#ffffff",
              "flex": 1,
            }
          }
          updateCellsBatchingPeriod={50}
          windowSize={21}
        />,
        "style": Object {
          "backgroundColor": "rgba(246,247,248,1)",
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "data": Array [],
          "disableVirtualization": false,
          "horizontal": false,
          "initialNumToRender": 10,
          "keyExtractor": [Function],
          "maxToRenderPerBatch": 10,
          "numColumns": 1,
          "onEndReachedThreshold": 2,
          "renderItem": [Function],
          "scrollEventThrottle": 50,
          "style": Object {
            "backgroundColor": "#ffffff",
            "flex": 1,
          },
          "updateCellsBatchingPeriod": 50,
          "windowSize": 21,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;

exports[`Accounts Index renders accounts correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "rgba(246,247,248,1)",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    data={
      W {
        "W": Array [
          pa {
            "e": Array [
              "address",
              "2ojpABYpUQNz6yr9JJABfbbC5LPnxyhrd9J",
              "network",
              "rinkeby",
            ],
            "g": 2,
            "j": 16647951,
            "k": null,
            "p": null,
            "q": 8196,
          },
        ],
        "g": 1,
        "j": 167668511,
        "k": null,
        "p": null,
        "q": 8196,
        "root": ef {
          "e": Array [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
          ],
          "u": null,
        },
        "shift": 5,
      }
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    invertStickyHeaders={undefined}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "backgroundColor": "#ffffff",
        "flex": 1,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
</View>
`;

exports[`Accounts Index renders multiple accounts correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "rgba(246,247,248,1)",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    data={
      W {
        "W": Array [
          pa {
            "e": Array [
              "address",
              "2ojpABYpUQNz6yr9JJABfbbC5LPnxyhrd9J",
              "network",
              "rinkeby",
            ],
            "g": 2,
            "j": 16647951,
            "k": null,
            "p": null,
            "q": 8196,
          },
          pa {
            "e": Array [
              "address",
              "2ojpABYpPQDz6yr9JJABfbbC5LPnxyhrd9J",
              "network",
              "kovan",
            ],
            "g": 2,
            "j": 16647951,
            "k": null,
            "p": null,
            "q": 8196,
          },
        ],
        "g": 2,
        "j": 167668511,
        "k": null,
        "p": null,
        "q": 8196,
        "root": ef {
          "e": Array [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
          ],
          "u": null,
        },
        "shift": 5,
      }
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    invertStickyHeaders={undefined}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "backgroundColor": "#ffffff",
        "flex": 1,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
</View>
`;
