// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`disabled button error 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "paddingTop": 10,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "padding": 15,
      }
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    getTextInputRefs={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onScroll={[Function]}
    overScrollMode="always"
    scrollEventThrottle={200}
    scrollToBottomOnKBShow={false}
    scrollToInputAdditionalOffset={75}
    startScrolledToBottom={false}
    style={
      Object {
        "backgroundColor": "white",
        "flex": 1,
        "paddingTop": 10,
      }
    }
  >
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Hello
      </Text>
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 0,
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "rgba(155,155,155,1)",
                "fontSize": 14,
                "lineHeight": 19,
                "textAlign": "center",
              },
              Object {
                "color": "red",
              },
            ]
          }
        >
          Server is down
        </Text>
      </View>
    </View>
  </RCTScrollView>
  <View
    enabled={true}
    keyboardVerticalOffset={0}
    onLayout={[Function]}
    style={undefined}
  >
    <View
      style={
        Array [
          undefined,
          Object {
            "bottom": 0,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "stretch",
            "backgroundColor": "white",
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "flex": 0,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 8,
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "margin": 15,
                  "padding": 10,
                },
                Array [
                  Object {
                    "borderColor": "rgba(54,184,123,1)",
                    "borderWidth": 1,
                    "marginLeft": 15,
                    "marginRight": 15,
                  },
                  Object {
                    "borderColor": "rgba(92,80,202,1)",
                  },
                ],
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Montserrat",
                    "fontSize": 18,
                    "textAlign": "center",
                  },
                  Array [
                    Object {
                      "color": "rgba(54,184,123,1)",
                      "fontFamily": undefined,
                      "fontSize": 18,
                      "lineHeight": 25,
                      "padding": 3,
                    },
                    Object {
                      "color": "rgba(92,80,202,1)",
                    },
                  ],
                  Object {},
                ]
              }
            >
              Next
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`disabled button invalid state 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "paddingTop": 10,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "padding": 15,
      }
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    getTextInputRefs={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onScroll={[Function]}
    overScrollMode="always"
    scrollEventThrottle={200}
    scrollToBottomOnKBShow={false}
    scrollToInputAdditionalOffset={75}
    startScrolledToBottom={false}
    style={
      Object {
        "backgroundColor": "white",
        "flex": 1,
        "paddingTop": 10,
      }
    }
  >
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Hello
      </Text>
    </View>
  </RCTScrollView>
  <View
    enabled={true}
    keyboardVerticalOffset={0}
    onLayout={[Function]}
    style={undefined}
  >
    <View
      style={
        Array [
          undefined,
          Object {
            "bottom": 0,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "stretch",
            "backgroundColor": "white",
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "flex": 0,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 8,
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "margin": 15,
                  "padding": 10,
                },
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "borderColor": "rgba(185, 185, 185, 1)",
                  "borderWidth": 1,
                },
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Montserrat",
                    "fontSize": 18,
                    "textAlign": "center",
                  },
                  Array [
                    Object {
                      "color": "rgba(54,184,123,1)",
                      "fontFamily": undefined,
                      "fontSize": 18,
                      "lineHeight": 25,
                      "padding": 3,
                    },
                    Object {
                      "color": "rgba(216,216,216,1)",
                    },
                  ],
                  Object {
                    "color": "rgba(185, 185, 185, 1)",
                  },
                ]
              }
            >
              Next
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`disabled button offline 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "paddingTop": 10,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "padding": 15,
      }
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    getTextInputRefs={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onScroll={[Function]}
    overScrollMode="always"
    scrollEventThrottle={200}
    scrollToBottomOnKBShow={false}
    scrollToInputAdditionalOffset={75}
    startScrolledToBottom={false}
    style={
      Object {
        "backgroundColor": "white",
        "flex": 1,
        "paddingTop": 10,
      }
    }
  >
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Hello
      </Text>
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 0,
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "rgba(155,155,155,1)",
                "fontSize": 14,
                "lineHeight": 19,
                "textAlign": "center",
              },
              Object {},
            ]
          }
        >
          offline
        </Text>
      </View>
    </View>
  </RCTScrollView>
  <View
    enabled={true}
    keyboardVerticalOffset={0}
    onLayout={[Function]}
    style={undefined}
  >
    <View
      style={
        Array [
          undefined,
          Object {
            "bottom": 0,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "stretch",
            "backgroundColor": "white",
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "flex": 0,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 8,
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "margin": 15,
                  "padding": 10,
                },
                Array [
                  Object {
                    "borderColor": "rgba(54,184,123,1)",
                    "borderWidth": 1,
                    "marginLeft": 15,
                    "marginRight": 15,
                  },
                  Object {
                    "borderColor": "rgba(92,80,202,1)",
                  },
                ],
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Montserrat",
                    "fontSize": 18,
                    "textAlign": "center",
                  },
                  Array [
                    Object {
                      "color": "rgba(54,184,123,1)",
                      "fontFamily": undefined,
                      "fontSize": 18,
                      "lineHeight": 25,
                      "padding": 3,
                    },
                    Object {
                      "color": "rgba(92,80,202,1)",
                    },
                  ],
                  Object {},
                ]
              }
            >
              Next
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`disabled button working 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "paddingTop": 10,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "padding": 15,
      }
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    getTextInputRefs={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onScroll={[Function]}
    overScrollMode="always"
    scrollEventThrottle={200}
    scrollToBottomOnKBShow={false}
    scrollToInputAdditionalOffset={75}
    startScrolledToBottom={false}
    style={
      Object {
        "backgroundColor": "white",
        "flex": 1,
        "paddingTop": 10,
      }
    }
  >
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Hello
      </Text>
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 0,
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      >
        <ActivityIndicator
          animating={true}
          color="rgba(74,74,74,1)"
          hidesWhenStopped={true}
          size="small"
          style={
            Object {
              "margin": 16,
            }
          }
        />
      </View>
    </View>
  </RCTScrollView>
  <View
    enabled={true}
    keyboardVerticalOffset={0}
    onLayout={[Function]}
    style={undefined}
  >
    <View
      style={
        Array [
          undefined,
          Object {
            "bottom": 0,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "stretch",
            "backgroundColor": "white",
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "flex": 0,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 8,
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "margin": 15,
                  "padding": 10,
                },
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "borderColor": "rgba(185, 185, 185, 1)",
                  "borderWidth": 1,
                },
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Montserrat",
                    "fontSize": 18,
                    "textAlign": "center",
                  },
                  Array [
                    Object {
                      "color": "rgba(54,184,123,1)",
                      "fontFamily": undefined,
                      "fontSize": 18,
                      "lineHeight": 25,
                      "padding": 3,
                    },
                    Object {
                      "color": "rgba(216,216,216,1)",
                    },
                  ],
                  Object {
                    "color": "rgba(185, 185, 185, 1)",
                  },
                ]
              }
            >
              Next
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`disabled button working and message 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "paddingTop": 10,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "padding": 15,
      }
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    getTextInputRefs={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onScroll={[Function]}
    overScrollMode="always"
    scrollEventThrottle={200}
    scrollToBottomOnKBShow={false}
    scrollToInputAdditionalOffset={75}
    startScrolledToBottom={false}
    style={
      Object {
        "backgroundColor": "white",
        "flex": 1,
        "paddingTop": 10,
      }
    }
  >
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Hello
      </Text>
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 0,
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      >
        <ActivityIndicator
          animating={true}
          color="rgba(74,74,74,1)"
          hidesWhenStopped={true}
          size="small"
          style={
            Object {
              "margin": 16,
            }
          }
        />
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "rgba(155,155,155,1)",
                "fontSize": 14,
                "lineHeight": 19,
                "textAlign": "center",
              },
              Object {},
            ]
          }
        >
          sending number
        </Text>
      </View>
    </View>
  </RCTScrollView>
  <View
    enabled={true}
    keyboardVerticalOffset={0}
    onLayout={[Function]}
    style={undefined}
  >
    <View
      style={
        Array [
          undefined,
          Object {
            "bottom": 0,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "stretch",
            "backgroundColor": "white",
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "flex": 0,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 8,
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "margin": 15,
                  "padding": 10,
                },
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "borderColor": "rgba(185, 185, 185, 1)",
                  "borderWidth": 1,
                },
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Montserrat",
                    "fontSize": 18,
                    "textAlign": "center",
                  },
                  Array [
                    Object {
                      "color": "rgba(54,184,123,1)",
                      "fontFamily": undefined,
                      "fontSize": 18,
                      "lineHeight": 25,
                      "padding": 3,
                    },
                    Object {
                      "color": "rgba(216,216,216,1)",
                    },
                  ],
                  Object {
                    "color": "rgba(185, 185, 185, 1)",
                  },
                ]
              }
            >
              Next
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`event handling calls onComplete if onProcess returns true 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "paddingTop": 10,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "padding": 15,
      }
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    getTextInputRefs={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onScroll={[Function]}
    overScrollMode="always"
    scrollEventThrottle={200}
    scrollToBottomOnKBShow={false}
    scrollToInputAdditionalOffset={75}
    startScrolledToBottom={false}
    style={
      Object {
        "backgroundColor": "white",
        "flex": 1,
        "paddingTop": 10,
      }
    }
  >
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Hello
      </Text>
    </View>
  </RCTScrollView>
  <View
    enabled={true}
    keyboardVerticalOffset={0}
    onLayout={[Function]}
    style={undefined}
  >
    <View
      style={
        Array [
          undefined,
          Object {
            "bottom": 0,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "stretch",
            "backgroundColor": "white",
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "flex": 0,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 8,
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "margin": 15,
                  "padding": 10,
                },
                Array [
                  Object {
                    "borderColor": "rgba(54,184,123,1)",
                    "borderWidth": 1,
                    "marginLeft": 15,
                    "marginRight": 15,
                  },
                  Object {
                    "borderColor": "rgba(92,80,202,1)",
                  },
                ],
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Montserrat",
                    "fontSize": 18,
                    "textAlign": "center",
                  },
                  Array [
                    Object {
                      "color": "rgba(54,184,123,1)",
                      "fontFamily": undefined,
                      "fontSize": 18,
                      "lineHeight": 25,
                      "padding": 3,
                    },
                    Object {
                      "color": "rgba(92,80,202,1)",
                    },
                  ],
                  Object {},
                ]
              }
            >
              Next
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`event handling calls onComplete if onProcess returns true 2`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "paddingTop": 10,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "padding": 15,
      }
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    getTextInputRefs={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onScroll={[Function]}
    overScrollMode="always"
    scrollEventThrottle={200}
    scrollToBottomOnKBShow={false}
    scrollToInputAdditionalOffset={75}
    startScrolledToBottom={false}
    style={
      Object {
        "backgroundColor": "white",
        "flex": 1,
        "paddingTop": 10,
      }
    }
  >
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Hello
      </Text>
    </View>
  </RCTScrollView>
  <View
    enabled={true}
    keyboardVerticalOffset={0}
    onLayout={[Function]}
    style={undefined}
  >
    <View
      style={
        Array [
          undefined,
          Object {
            "bottom": 0,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "stretch",
            "backgroundColor": "white",
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "flex": 0,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 8,
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "margin": 15,
                  "padding": 10,
                },
                Array [
                  Object {
                    "borderColor": "rgba(54,184,123,1)",
                    "borderWidth": 1,
                    "marginLeft": 15,
                    "marginRight": 15,
                  },
                  Object {
                    "borderColor": "rgba(92,80,202,1)",
                  },
                ],
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Montserrat",
                    "fontSize": 18,
                    "textAlign": "center",
                  },
                  Array [
                    Object {
                      "color": "rgba(54,184,123,1)",
                      "fontFamily": undefined,
                      "fontSize": 18,
                      "lineHeight": 25,
                      "padding": 3,
                    },
                    Object {
                      "color": "rgba(92,80,202,1)",
                    },
                  ],
                  Object {},
                ]
              }
            >
              Next
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`event handling calls onContinue if no onProcess 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "paddingTop": 10,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "padding": 15,
      }
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    getTextInputRefs={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onScroll={[Function]}
    overScrollMode="always"
    scrollEventThrottle={200}
    scrollToBottomOnKBShow={false}
    scrollToInputAdditionalOffset={75}
    startScrolledToBottom={false}
    style={
      Object {
        "backgroundColor": "white",
        "flex": 1,
        "paddingTop": 10,
      }
    }
  >
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Hello
      </Text>
    </View>
  </RCTScrollView>
  <View
    enabled={true}
    keyboardVerticalOffset={0}
    onLayout={[Function]}
    style={undefined}
  >
    <View
      style={
        Array [
          undefined,
          Object {
            "bottom": 0,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "stretch",
            "backgroundColor": "white",
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "flex": 0,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 8,
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "margin": 15,
                  "padding": 10,
                },
                Array [
                  Object {
                    "borderColor": "rgba(54,184,123,1)",
                    "borderWidth": 1,
                    "marginLeft": 15,
                    "marginRight": 15,
                  },
                  Object {
                    "borderColor": "rgba(92,80,202,1)",
                  },
                ],
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Montserrat",
                    "fontSize": 18,
                    "textAlign": "center",
                  },
                  Array [
                    Object {
                      "color": "rgba(54,184,123,1)",
                      "fontFamily": undefined,
                      "fontSize": 18,
                      "lineHeight": 25,
                      "padding": 3,
                    },
                    Object {
                      "color": "rgba(92,80,202,1)",
                    },
                  ],
                  Object {},
                ]
              }
            >
              Next
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`event handling calls onContinue if no onProcess 2`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "paddingTop": 10,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "padding": 15,
      }
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    getTextInputRefs={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onScroll={[Function]}
    overScrollMode="always"
    scrollEventThrottle={200}
    scrollToBottomOnKBShow={false}
    scrollToInputAdditionalOffset={75}
    startScrolledToBottom={false}
    style={
      Object {
        "backgroundColor": "white",
        "flex": 1,
        "paddingTop": 10,
      }
    }
  >
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Hello
      </Text>
    </View>
  </RCTScrollView>
  <View
    enabled={true}
    keyboardVerticalOffset={0}
    onLayout={[Function]}
    style={undefined}
  >
    <View
      style={
        Array [
          undefined,
          Object {
            "bottom": 0,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "stretch",
            "backgroundColor": "white",
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "flex": 0,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 8,
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "margin": 15,
                  "padding": 10,
                },
                Array [
                  Object {
                    "borderColor": "rgba(54,184,123,1)",
                    "borderWidth": 1,
                    "marginLeft": 15,
                    "marginRight": 15,
                  },
                  Object {
                    "borderColor": "rgba(92,80,202,1)",
                  },
                ],
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Montserrat",
                    "fontSize": 18,
                    "textAlign": "center",
                  },
                  Array [
                    Object {
                      "color": "rgba(54,184,123,1)",
                      "fontFamily": undefined,
                      "fontSize": 18,
                      "lineHeight": 25,
                      "padding": 3,
                    },
                    Object {
                      "color": "rgba(92,80,202,1)",
                    },
                  ],
                  Object {},
                ]
              }
            >
              Next
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`event handling calls only onProcess 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "paddingTop": 10,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "padding": 15,
      }
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    getTextInputRefs={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onScroll={[Function]}
    overScrollMode="always"
    scrollEventThrottle={200}
    scrollToBottomOnKBShow={false}
    scrollToInputAdditionalOffset={75}
    startScrolledToBottom={false}
    style={
      Object {
        "backgroundColor": "white",
        "flex": 1,
        "paddingTop": 10,
      }
    }
  >
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Hello
      </Text>
    </View>
  </RCTScrollView>
  <View
    enabled={true}
    keyboardVerticalOffset={0}
    onLayout={[Function]}
    style={undefined}
  >
    <View
      style={
        Array [
          undefined,
          Object {
            "bottom": 0,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "stretch",
            "backgroundColor": "white",
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "flex": 0,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 8,
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "margin": 15,
                  "padding": 10,
                },
                Array [
                  Object {
                    "borderColor": "rgba(54,184,123,1)",
                    "borderWidth": 1,
                    "marginLeft": 15,
                    "marginRight": 15,
                  },
                  Object {
                    "borderColor": "rgba(92,80,202,1)",
                  },
                ],
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Montserrat",
                    "fontSize": 18,
                    "textAlign": "center",
                  },
                  Array [
                    Object {
                      "color": "rgba(54,184,123,1)",
                      "fontFamily": undefined,
                      "fontSize": 18,
                      "lineHeight": 25,
                      "padding": 3,
                    },
                    Object {
                      "color": "rgba(92,80,202,1)",
                    },
                  ],
                  Object {},
                ]
              }
            >
              Next
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`event handling calls only onProcess 2`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "paddingTop": 10,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "padding": 15,
      }
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    getTextInputRefs={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onScroll={[Function]}
    overScrollMode="always"
    scrollEventThrottle={200}
    scrollToBottomOnKBShow={false}
    scrollToInputAdditionalOffset={75}
    startScrolledToBottom={false}
    style={
      Object {
        "backgroundColor": "white",
        "flex": 1,
        "paddingTop": 10,
      }
    }
  >
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Hello
      </Text>
    </View>
  </RCTScrollView>
  <View
    enabled={true}
    keyboardVerticalOffset={0}
    onLayout={[Function]}
    style={undefined}
  >
    <View
      style={
        Array [
          undefined,
          Object {
            "bottom": 0,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "stretch",
            "backgroundColor": "white",
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "flex": 0,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 8,
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "margin": 15,
                  "padding": 10,
                },
                Array [
                  Object {
                    "borderColor": "rgba(54,184,123,1)",
                    "borderWidth": 1,
                    "marginLeft": 15,
                    "marginRight": 15,
                  },
                  Object {
                    "borderColor": "rgba(92,80,202,1)",
                  },
                ],
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Montserrat",
                    "fontSize": 18,
                    "textAlign": "center",
                  },
                  Array [
                    Object {
                      "color": "rgba(54,184,123,1)",
                      "fontFamily": undefined,
                      "fontSize": 18,
                      "lineHeight": 25,
                      "padding": 3,
                    },
                    Object {
                      "color": "rgba(92,80,202,1)",
                    },
                  ],
                  Object {},
                ]
              }
            >
              Next
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders continue button 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "paddingTop": 10,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "padding": 15,
      }
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    getTextInputRefs={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onScroll={[Function]}
    overScrollMode="always"
    scrollEventThrottle={200}
    scrollToBottomOnKBShow={false}
    scrollToInputAdditionalOffset={75}
    startScrolledToBottom={false}
    style={
      Object {
        "backgroundColor": "white",
        "flex": 1,
        "paddingTop": 10,
      }
    }
  >
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Hello
      </Text>
    </View>
  </RCTScrollView>
  <View
    enabled={true}
    keyboardVerticalOffset={0}
    onLayout={[Function]}
    style={undefined}
  >
    <View
      style={
        Array [
          undefined,
          Object {
            "bottom": 0,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "stretch",
            "backgroundColor": "white",
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "flex": 0,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 8,
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "margin": 15,
                  "padding": 10,
                },
                Array [
                  Object {
                    "borderColor": "rgba(54,184,123,1)",
                    "borderWidth": 1,
                    "marginLeft": 15,
                    "marginRight": 15,
                  },
                  Object {
                    "borderColor": "rgba(92,80,202,1)",
                  },
                ],
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Montserrat",
                    "fontSize": 18,
                    "textAlign": "center",
                  },
                  Array [
                    Object {
                      "color": "rgba(54,184,123,1)",
                      "fontFamily": undefined,
                      "fontSize": 18,
                      "lineHeight": 25,
                      "padding": 3,
                    },
                    Object {
                      "color": "rgba(92,80,202,1)",
                    },
                  ],
                  Object {},
                ]
              }
            >
              Next
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders skip button if skippable 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "paddingTop": 10,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "padding": 15,
      }
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    getTextInputRefs={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onScroll={[Function]}
    overScrollMode="always"
    scrollEventThrottle={200}
    scrollToBottomOnKBShow={false}
    scrollToInputAdditionalOffset={75}
    startScrolledToBottom={false}
    style={
      Object {
        "backgroundColor": "white",
        "flex": 1,
        "paddingTop": 10,
      }
    }
  >
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Hello
      </Text>
    </View>
  </RCTScrollView>
  <View
    enabled={true}
    keyboardVerticalOffset={0}
    onLayout={[Function]}
    style={undefined}
  >
    <View
      style={
        Array [
          undefined,
          Object {
            "bottom": 0,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "stretch",
            "backgroundColor": "white",
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "flex": 0,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 8,
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "margin": 15,
                  "padding": 10,
                },
                Array [
                  Object {
                    "borderColor": "rgba(54,184,123,1)",
                    "borderWidth": 1,
                    "marginLeft": 15,
                    "marginRight": 15,
                  },
                  Object {
                    "borderColor": "rgba(92,80,202,1)",
                  },
                ],
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Montserrat",
                    "fontSize": 18,
                    "textAlign": "center",
                  },
                  Array [
                    Object {
                      "color": "rgba(54,184,123,1)",
                      "fontFamily": undefined,
                      "fontSize": 18,
                      "lineHeight": 25,
                      "padding": 3,
                    },
                    Object {
                      "color": "rgba(92,80,202,1)",
                    },
                  ],
                  Object {},
                ]
              }
            >
              Next
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "alignSelf": "stretch",
              "flex": 0,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 8,
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "margin": 15,
                  "padding": 10,
                },
                Object {
                  "borderWidth": 0,
                  "marginTop": 0,
                },
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Montserrat",
                    "fontSize": 18,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "rgba(92,80,202,1)",
                    "fontFamily": undefined,
                    "fontSize": 18,
                    "lineHeight": 25,
                  },
                  Object {},
                ]
              }
            >
              Skip
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
